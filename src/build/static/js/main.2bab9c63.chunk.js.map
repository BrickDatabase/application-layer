{"version":3,"sources":["newComponents/Header.js","newComponents/BrandColors.js","newComponents/PieChart.js","newComponents/LineChart.js","newComponents/RadarChart.js","newComponents/BarChart.js","newComponents/Sidebar.js","newComponents/Dashboard.js","Apps.js","reportWebVitals.js","index.js"],"names":["Header","className","Navbar","bg","variant","Brand","icon","faSkullCrossbones","size","Component","RIT","MINECRAFT","BITCOIN","WALLSTREET","ROBINHOOD","GAMESTOP","PLAYSTATION","XBOX","NINTENDO","TWITCH","PieChart","state","dataPie","labels","datasets","data","backgroundColor","hoverBackgroundColor","Container","this","options","responsive","React","LineChart","dataLine","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Math","random","RadarChart","dataRadar","BarChart","dataBar","borderWidth","barChartOptions","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","Sidebar","props","onChartChanged","getPie","bind","getLine","getRadar","getBar","Button","style","marginBottom","borderRadius","width","height","onClick","faChartLine","faChartPie","faChartArea","faChartBar","Dashboard","chart","values","setState","fluid","Row","Col","xs","id","charts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bab9c63.chunk.js","sourcesContent":["import {Component} from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSkullCrossbones} from '@fortawesome/free-solid-svg-icons'\n\nclass Header extends Component{\n\n    render(){\n        return(\n            <div className=\"shadow p-3 rounded\">\n                \n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>\n                    <FontAwesomeIcon icon={faSkullCrossbones} size=\"lg\"/>\n                        Subreddit\n                        </Navbar.Brand>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Header","export const RIT = {\n    PRIMARY:\"#F76902\",\n    HOVER:\"#f88734\",\n    FILL:\"#fbc399\"\n}\nexport const MINECRAFT =  {\n    PRIMARY:\"#028A0F\",\n    HOVER:\"#34a13e\",\n    FILL:\"#99d09f\"\n}\n\nexport const BITCOIN = {\n    PRIMARY:\"#f2a900\",\n    HOVER:\"#f4ba32\",\n    FILL:\"#f9dc99\"\n}\n\nexport const WALLSTREET = {\n    PRIMARY:\"#949FB1\",\n    HOVER:\"#a9b2c0\",\n    FILL:\"#d4d8df\"\n}\n\nexport const ROBINHOOD = {\n    PRIMARY:\"#4D5360\",\n    HOVER:\"#70757f\",\n    FILL:\"#b7babf\"\n}\n\nexport const GAMESTOP = {\n    PRIMARY:\"#260000\",\n    HOVER:\"#513232\",\n    FILL:\"#a89999\"\n}\n\nexport const PLAYSTATION = {\n    PRIMARY:\"#1520A6\",\n    HOVER:\"#434cb7\",\n    FILL:\"#a1a5db\"\n}\n\nexport const XBOX = {\n    PRIMARY:\"#083e08\",\n    HOVER:\"#3f963f\",\n    FILL:\"#9cb19c\"\n}\n\nexport const NINTENDO = {\n    PRIMARY:\"#E60012\",\n    HOVER:\"#eb3241\",\n    FILL:\"#f599a0\"\n}\n\nexport const TWITCH = {\n    PRIMARY:\"#6441A4\",\n    HOVER:\"#8366b6\",\n    FILL:\"#c1b3da\"\n}","import React from \"react\"\nimport { Pie } from \"react-chartjs-2\"\nimport {Container } from \"react-bootstrap\"\nimport axios from 'axios'\nimport {RIT, MINECRAFT, \n  BITCOIN, WALLSTREET,\nROBINHOOD, GAMESTOP, PLAYSTATION,\nXBOX, NINTENDO, TWITCH} from './BrandColors'\n\n\n\nclass PieChart extends React.Component {\n\n    componentDidMount(){\n        // axios.get('http://localhost:5000/infos')\n        // .then(res =>{\n        //   const infos = res.data\n        //   console.log(res.data)\n        //   const lengths = infos.result.rows.length\n        //   console.log(infos.result.rows[412])\n        // })\n    }\n\n    state = {\n      dataPie: {\n        labels: [\"rit\", \"minecraft\", \"bitcoin\", \"wallstreetbets\", \"robinhood\", \"gamestop\",\"playstation\",\"xbox\",\"nintendo\",\"twitch\"],\n        datasets: [\n          {\n            data: [300, 50, 100, 40, 120, 340, 130, 234, 234, 105],\n            backgroundColor: [\n              RIT.PRIMARY,\n              MINECRAFT.PRIMARY,\n              BITCOIN.PRIMARY,\n              WALLSTREET.PRIMARY,\n              ROBINHOOD.PRIMARY,\n              GAMESTOP.PRIMARY,\n              PLAYSTATION.PRIMARY,\n              XBOX.PRIMARY,\n              NINTENDO.PRIMARY,\n              TWITCH.PRIMARY\n            ],\n            hoverBackgroundColor: [\n             RIT.HOVER,\n             MINECRAFT.HOVER,\n             BITCOIN.HOVER,\n             WALLSTREET.HOVER,\n             ROBINHOOD.HOVER,\n             GAMESTOP.HOVER,\n             PLAYSTATION.HOVER,\n             XBOX.HOVER,\n             NINTENDO.HOVER,\n             TWITCH.HOVER\n            ]\n          }\n        ]\n      }\n    }\n  \n    render() {\n      return (\n        <Container>\n          <h3 className=\"mt-5\">Pie chart</h3>\n          <Pie data={this.state.dataPie} options={{ responsive: true }} />\n        </Container>\n      );\n    }\n  }\n  \n  export default PieChart;","import React from \"react\"\nimport { Line } from \"react-chartjs-2\"\nimport { Container } from \"react-bootstrap\"\nimport {RIT, MINECRAFT, \n  BITCOIN, WALLSTREET,\nROBINHOOD, GAMESTOP, PLAYSTATION,\nXBOX, NINTENDO, TWITCH} from './BrandColors'\n\nclass LineChart extends React.Component {\n  state = {\n    dataLine: {\n      labels: [\"Day 05\", \"Day 10\", \"Day 15\", \"day 20\", \"day 25\", \"Day 30\"],\n      datasets: [\n        {\n          label: \"rit\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(247, 105, 2, .3)\",\n          borderColor: RIT.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: RIT.PRIMARY,\n          pointBackgroundColor: RIT.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, Math.random(), 81, 56, 55]\n        },\n        {\n          label: \"minecraft\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: MINECRAFT.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: MINECRAFT.PRIMARY,\n          pointBackgroundColor: MINECRAFT.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [Math.random(), 48, 40, 19, 86, 27]\n        },\n        {\n          label: \"bitcoin\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: BITCOIN.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: BITCOIN.PRIMARY,\n          pointBackgroundColor: BITCOIN.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, Math.random(), 86, 27]\n        },\n        {\n          label: \"wallstreetbets\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: WALLSTREET.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: WALLSTREET.PRIMARY,\n          pointBackgroundColor: WALLSTREET.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, Math.random(), 27]\n        },\n        {\n          label: \"robinhood\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: ROBINHOOD.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: ROBINHOOD.PRIMARY,\n          pointBackgroundColor: ROBINHOOD.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, Math.random()]\n        },\n        {\n          label: \"gamestop\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: GAMESTOP.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: GAMESTOP.PRIMARY,\n          pointBackgroundColor: GAMESTOP.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [Math.random(), 48, 40, 19, 86, 27]\n        },\n        {\n          label: \"playstation\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: PLAYSTATION.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: PLAYSTATION.PRIMARY,\n          pointBackgroundColor: PLAYSTATION.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, Math.random(), 40, 19, 86, 27]\n        },\n        {\n          label: \"xbox\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: XBOX.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: XBOX.PRIMARY,\n          pointBackgroundColor: XBOX.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, Math.random(), 86, 27]\n        },\n        {\n          label: \"nintendo\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: NINTENDO.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: NINTENDO.PRIMARY,\n          pointBackgroundColor: NINTENDO.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, Math.random(), 27]\n        },\n        {\n          label: \"twitch\",\n          fill: false,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(\t2, 138, 15, .3)\",\n          borderColor: TWITCH.PRIMARY,\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: TWITCH.PRIMARY,\n          pointBackgroundColor: TWITCH.PRIMARY,\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [Math.random(), 48, Math.random(), 19, 86, 34]\n        }\n      ]\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <h3 className=\"mt-5\">Line chart</h3>\n        <Line data={this.state.dataLine} options={{ responsive: true }} />\n      </Container>\n    );\n  }\n}\n\nexport default LineChart;","import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport { Container } from \"react-bootstrap\";\nimport {RIT, MINECRAFT, \n  BITCOIN, WALLSTREET,\nROBINHOOD, GAMESTOP, PLAYSTATION,\nXBOX, NINTENDO, TWITCH} from './BrandColors'\n\n\nclass RadarChart extends React.Component {\n  state = {\n    dataRadar: {\n      labels: [\"Subscribers\", \"Active Subscribers\", \"Comments\", \"Submission\"],\n      datasets: [\n        {\n          label: \"rit\",\n          backgroundColor: RIT.FILL,\n          borderColor: RIT.PRIMARY,\n          data: [65, 59, 90, 81]\n        },\n        {\n          label: \"minecraft\",\n          backgroundColor: MINECRAFT.FILL,\n          borderColor: MINECRAFT.PRIMARY,\n          data: [28, 48, 40, 19]\n        },\n        {\n            label: \"bitcoin\",\n            backgroundColor: BITCOIN.FILL,\n            borderColor: BITCOIN.PRIMARY,\n            data: [23, 48, 40, 19]\n        },\n        {\n            label: \"wallstreetbets\",\n            backgroundColor: WALLSTREET.FILL,\n            borderColor: WALLSTREET.PRIMARY,\n            data: [28, 30, 40, 19]\n        },\n        {\n            label: \"robinhood\",\n            backgroundColor: ROBINHOOD.FILL,\n            borderColor: ROBINHOOD.PRIMARY,\n            data: [28, 48, 67, 19]\n        },\n        {\n            label: \"gamestop\",\n            backgroundColor: GAMESTOP.FILL,\n            borderColor: GAMESTOP.PRIMARY,\n            data: [28, 48, 40, 83]\n        },\n        {\n            label: \"playstation\",\n            backgroundColor: PLAYSTATION.FILL,\n            borderColor: PLAYSTATION.PRIMARY,\n            data: [28, 42, 40, 39]\n        },\n        {\n            label: \"xbox\",\n            backgroundColor: XBOX.FILL,\n            borderColor: XBOX.PRIMARY,\n            data: [21, 56, 40, 19]\n        },\n        {\n            label: \"nintendo\",\n            backgroundColor: NINTENDO.FILL,\n            borderColor: NINTENDO.PRIMARY,\n            data: [28, 98, 40, 4]\n        },\n        {\n            label: \"twitch\",\n            backgroundColor: TWITCH.FILL,\n            borderColor: TWITCH.PRIMARY,\n            data: [70, 48, 23, 19]\n        }\n      ]\n    }\n  }\n\n  /*\n  active_subscribers: 5\ncomments: 3\ndate: \"2020-12-07T15:30:39.000Z\"\nid: 415\nsubmission: 67\nsubreddit_id: 2\nsubscribers: 9\n  */\n\n\nrender() {\n    return (\n      <Container>\n        <h3 className=\"mt-5\">Radar chart</h3>\n        <Radar data={this.state.dataRadar} options={{ responsive: true }} />\n      </Container>\n    );\n  }\n}\n\nexport default RadarChart;","import React from \"react\"\nimport { Bar } from \"react-chartjs-2\"\nimport { Container } from \"react-bootstrap\"\nimport {RIT, MINECRAFT, \n  BITCOIN, WALLSTREET,\nROBINHOOD, GAMESTOP, PLAYSTATION,\nXBOX, NINTENDO, TWITCH} from './BrandColors'\n\nclass BarChart extends React.Component {\n  state = {\n    dataBar: {\n      labels: [\"rit\", \"minecraft\", \"bitcoin\", \"wallstreetbets\", \"robinhood\", \n      \"gamestop\",\"playstation\",\"xbox\",\"nintendo\",\"twitch\"],\n      datasets: [\n        {\n          label: \"% of Comments\",\n          data: [12, 19, 3, 5, 2, 3, 7, 8, 9, 2],\n          backgroundColor: [\n            RIT.FILL,\n            MINECRAFT.FILL,\n            BITCOIN.FILL,\n            WALLSTREET.FILL,\n            ROBINHOOD.FILL,\n            GAMESTOP.FILL,\n            PLAYSTATION.FILL,\n            XBOX.FILL,\n            NINTENDO.FILL,\n            TWITCH.FILL\n          ],\n          borderWidth: 2,\n          borderColor: [\n            RIT.PRIMARY,\n            MINECRAFT.PRIMARY,\n            BITCOIN.PRIMARY,\n            WALLSTREET.PRIMARY,\n            ROBINHOOD.PRIMARY,\n            GAMESTOP.PRIMARY,\n            PLAYSTATION.PRIMARY,\n            XBOX.PRIMARY,\n            NINTENDO.PRIMARY,\n            TWITCH.PRIMARY\n          ]\n        }\n      ]\n    },\n    barChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        xAxes: [\n          {\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }\n        ]\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <h3 className=\"mt-5\">Bar chart</h3>\n        <Bar data={this.state.dataBar} options={this.state.barChartOptions} />\n      </Container>\n    );\n  }\n}\n\nexport default BarChart","import { Component } from 'react'\nimport { Nav, Navbar,Container, Row, Col, Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faChartArea, faChartLine, faChartPie, faChartBar} from '@fortawesome/free-solid-svg-icons'\nimport '../styles/sidebar.css'\nimport Dashboard from './Dashboard'\nimport PieChart from './PieChart'\nimport LineChart from './LineChart'\nimport RadarChart from './RadarChart'\nimport BarChart from './BarChart'\n\nclass Sidebar extends Component{\n\n    constructor(props)\n    {\n        super(props)\n        this.props.onChartChanged(<LineChart/>)\n        this.getPie = this.getPie.bind(this)\n        this.getLine = this.getLine.bind(this)\n        this.getRadar = this.getRadar.bind(this)\n        this.getBar = this.getBar.bind(this)\n    }\n\n    getPie()\n    {\n        this.props.onChartChanged(<PieChart/>)\n    }\n\n    getLine()\n    {\n        this.props.onChartChanged(<LineChart/>)\n    }\n\n    getRadar()\n    {\n        this.props.onChartChanged(<RadarChart/>)\n    }\n\n    getBar()\n    {\n        this.props.onChartChanged(<BarChart/>)\n    }\n\n    render(){\n        return(\n            <div className=\"col-md-12 d-md-block bg-light\">\n\n                <Button bg=\"dark\" variant=\"dark\" style={{marginBottom:'5px',borderRadius:'5px', width:'100%',height:'80px'}} onClick={this.getLine}>\n                <FontAwesomeIcon icon={faChartLine} size=\"lg\" />\n                        Line Chart\n                </Button>\n                <Button bg=\"dark\" variant=\"dark\" style={{marginBottom:'5px',borderRadius:'5px', width:'100%', height:'80px'}} onClick={this.getPie}>\n                    <FontAwesomeIcon icon={faChartPie} size=\"lg\"/>\n                        Pie Chart\n                </Button>\n                <Button bg=\"dark\" variant=\"dark\" style={{marginBottom:'5px',borderRadius:'5px', width:'100%', height:'80px'}} onClick={this.getRadar}>\n                    <FontAwesomeIcon icon={faChartArea} size=\"lg\"/>\n                        Radar Chart\n                </Button>\n                <Button bg=\"dark\" variant=\"dark\" style={{marginBottom:'5px',borderRadius:'5px', width:'100%', height:'80px'}} onClick={this.getBar}>\n                    <FontAwesomeIcon icon={faChartBar} size=\"lg\"/>\n                        Bar Chart\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar","import { Component } from 'react'\nimport Header from './Header'\nimport Sidebar from './Sidebar'\nimport {Container, Row, Col,Button } from \"react-bootstrap\"\nimport LineChart from './LineChart'\n\nclass Dashboard extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {chart:<LineChart/>}\n        // this.getPie = this.getPie.bind(this)\n        // this.getLine = this.getLine.bind(this)\n        this.onChartChanged = this.onChartChanged.bind(this)\n    }\n\n    onChartChanged(values)\n    {\n        this.setState({chart:values})\n    }\n    \n    render(){\n        return (\n            <>\n            <Header/>\n            <Container fluid>\n            <Row>\n                <Col xs={3} id=\"sidebar-wrapper\">\n                <Sidebar charts={this.state.chart} onChartChanged={this.onChartChanged}/>\n                </Col>\n                <Col id=\"page-content-wrapper\">\n                    {this.state.chart}\n                </Col>\n            </Row>\n            </Container>\n            </>\n        )\n    }\n}\n\nexport default Dashboard","import Dashboard from './newComponents/Dashboard'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\nfunction App() {\n  \n  return (\n    <div>\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Apps';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}